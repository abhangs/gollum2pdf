#!/usr/bin/env node

"use strict"

const program = require('commander'),
    Gollum2pdf = require('../gollum2pdf'),
    path = require('path')


class Gollum2pdfCli {

  constructor () {

    // version an be taken from package version..
    this.program = program.version(1.0)

        .usage('[options] <wiki-dir>')
        .description('Convert a gollum wiki')

        .option("-o, --output <output-dir>", "Output dir [default: './']", './')
        .option("-r, --root-page-path <md-file>", "Root Page Path to Generate using Reference Tracing")
        .option("-t, --title <title>", "Document title (displayed on front page)")
        .option("-i, --title-image <image-title>", "Title image (displayed on front page)")
        .option("-b, --page-break-max-level <level>", "Do not insert page breaks for pages with higher level")

        .option("--title-toc-max-level <title-toc-max-level>", "Title TOC max page level")

        .option("--page-toc-max-level <title-toc-max-level>", "Page TOC max page level")
        .option("--page-toc-generate-for-max-level <title-toc-generate-for-max-level>", "Title TOC max page level")




        .option("-v --verbose", "Verbose mode")
  }

  run() {
    this.program.parse(process.argv)
    if (!this.program.args.length) {
      this.program.help()
    }

    let programOpts = {
      outputDir: this.program.output,
      rootPagePath: this.program.rootPagePath,
      title: this.program.title ? program.title : "Generated by gollum2pdf",
      titleImage: this.program.titleImage,
      pageBreakMaxLevel: this.program.pageBreakMaxLevel ? parseInt(this.program.pageBreakMaxLevel) : 1,

      // max level for generated TOC - 0 to disable
      titleTocMaxLevel: this.program.titleTocMaxLevel ? parseInt(this.program.titleTocMaxLevel) : 2,

      // disable page TOC by default
      pageTocMaxLevel: this.program.pageTocMaxLevel ? parseInt(this.program.pageTocMaxLevel) : 0,
      pageTocGenerateForMaxLevel: this.program.pageTocGenerateForMaxLevel ? parseInt(this.program.pageTocGenerateForMaxLevel) : 2,

      // root path
      wikiRootPath: this.program.args[0],

      // not yet added to interface
      cssDir: "assets/css",
      jsDir: "assets/js"
    }

    let gollum2pdf = new Gollum2pdf(programOpts)

    // render html
    let htmlFile = path.join("./", programOpts.outputDir, "gollum2pdf.html")
    let html = gollum2pdf.renderHtml(htmlFile)

    // render PDF (out file is used in pipe at the end of command..)
    let pdfFile = path.join(programOpts.outputDir, "gollum2pdf.pdf")
    gollum2pdf.renderPdf(html, pdfFile)

  }

}

if (require.main === module) {
  new Gollum2pdfCli().run()
}

module.exports = Gollum2pdfCli
